{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/ReactLab/src/CounterTimer.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CounterTimer = () => {\n  _s();\n\n  const secondsArray = [10, 20, 30, 40, 50];\n  const [isSecondClick, setIsSecondClick] = useState();\n  const [seconds, setSeconds] = useState();\n\n  const onClickReset = () => {\n    if (isSecondClick) {\n      setIsSecondClick(false);\n      return;\n    }\n\n    setIsSecondClick(true);\n  };\n\n  const timeIndecis = e => {\n    setSeconds(e.currentTarget.value);\n  };\n\n  const resetBtn = document.getElementById(\"resetBtn\");\n  resetBtn.addEventListener(\"click\", timeIndecis);\n\n  const counterTimerBody = _ref => {\n    let {\n      remainingTime\n    } = _ref;\n\n    if (remainingTime === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          color: \"red\",\n          fontSize: \"20px\"\n        },\n        children: \"Too late\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timerBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"remainingTime\",\n        children: \"Remaining time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"timer\",\n        children: remainingTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"remainingTime\",\n        children: \"seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.reactlabs.ai/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"React Labs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"ReactJS Assignment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"countDownTimer\",\n      children: /*#__PURE__*/_jsxDEV(CountdownCircleTimer, {\n        size: 250,\n        isPlaying: true,\n        duration: seconds ? seconds : secondsArray[0],\n        colors: [[\"#34AD00\", 0.55], [\"#B3BB2B\", 0.44], [\"#FF0000\", 0.33]],\n        children: counterTimerBody\n      }, isSecondClick, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"selectReset\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: timeIndecis,\n        children: secondsArray.map((time, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: time,\n          children: [time, \" sec\"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"resetBtn\",\n        onClick: onClickReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CounterTimer, \"O2qTo3P5jI605XSuQmeS0x1sFOg=\");\n\n_c = CounterTimer;\nexport default CounterTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterTimer\");","map":{"version":3,"sources":["/root/Desktop/ReactLab/src/CounterTimer.js"],"names":["useRef","useState","CountdownCircleTimer","CounterTimer","secondsArray","isSecondClick","setIsSecondClick","seconds","setSeconds","onClickReset","timeIndecis","e","currentTarget","value","resetBtn","document","getElementById","addEventListener","counterTimerBody","remainingTime","display","color","fontSize","map","time","i"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nimport \"./style.css\";\n\nconst CounterTimer = () => {\n  const secondsArray = [10, 20, 30, 40, 50];\n\n  const [isSecondClick, setIsSecondClick] = useState();\n  const [seconds, setSeconds] = useState();\n\n  const onClickReset = () => {\n    if (isSecondClick) {\n      setIsSecondClick(false);\n      return;\n    }\n\n    setIsSecondClick(true);\n  };\n\n  const timeIndecis = (e) => {\n    setSeconds(e.currentTarget.value);\n  };\n\n  const resetBtn = document.getElementById(\"resetBtn\");\n  resetBtn.addEventListener(\"click\", timeIndecis);\n\n  const counterTimerBody = ({ remainingTime }) => {\n    if (remainingTime === 0) {\n      return (\n        <div style={{ display: \"flex\", color: \"red\", fontSize: \"20px\" }}>\n          Too late\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"timerBody\">\n        <div className=\"remainingTime\">Remaining time</div>\n        <div id=\"timer\">{remainingTime}</div>\n        <div className=\"remainingTime\">seconds</div>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <h1>\n        <a\n          href=\"https://www.reactlabs.ai/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          React Labs\n        </a>\n      </h1>\n      <h2>ReactJS Assignment</h2>\n      <div id=\"countDownTimer\">\n        <CountdownCircleTimer\n          key={isSecondClick}\n          size={250}\n          isPlaying\n          duration={seconds ? seconds : secondsArray[0]}\n          colors={[\n            [\"#34AD00\", 0.55],\n            [\"#B3BB2B\", 0.44],\n            [\"#FF0000\", 0.33],\n          ]}\n        >\n          {counterTimerBody}\n        </CountdownCircleTimer>\n      </div>\n      <div id=\"selectReset\">\n        <select onChange={timeIndecis}>\n          {secondsArray.map((time, i) => (\n            <option value={time} key={i}>\n              {time}\n              {\" sec\"}\n            </option>\n          ))}\n        </select>\n        <button id=\"resetBtn\" onClick={onClickReset}>\n          Reset\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CounterTimer;\n"]},"metadata":{},"sourceType":"module"}