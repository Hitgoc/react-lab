{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/ReactLab/src/RenderTime.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RenderTime = _ref => {\n  let {\n    remainingTime\n  } = _ref;\n\n  if (remainingTime === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: \"Too late...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text\",\n      children: \"Remaining\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"value\",\n      children: remainingTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text\",\n      children: \"seconds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = RenderTime;\nexport default RenderTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderTime\");","map":{"version":3,"sources":["/root/Desktop/ReactLab/src/RenderTime.js"],"names":["RenderTime","remainingTime"],"mappings":";;;AAAA,MAAMA,UAAU,GAAG,QAAuB;AAAA,MAAtB;AAAEC,IAAAA;AAAF,GAAsB;;AACxC,MAAIA,aAAa,KAAK,CAAtB,EAAyB;AACvB,wBAAO;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAZD;;KAAMD,U;AAcN,eAAeA,UAAf","sourcesContent":["const RenderTime = ({ remainingTime }) => {\n  if (remainingTime === 0) {\n    return <div className=\"timer\">Too late...</div>;\n  }\n\n  return (\n    <div className=\"timer\">\n      <div className=\"text\">Remaining</div>\n      <div className=\"value\">{remainingTime}</div>\n      <div className=\"text\">seconds</div>\n    </div>\n  );\n};\n\nexport default RenderTime;\n"]},"metadata":{},"sourceType":"module"}